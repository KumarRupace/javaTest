// In this section you declare where to find the dependencies of your project
repositories {
    // This is meven repo
    maven { url 'https://repo.maven.apache.org/maven2/'}
    maven { url 'https://plugins.gradle.org/m2/'}
}

buildscript {
    ext {
        springBootVersion = '2.1.6.RELEASE' 
    }
    repositories {
        mavenLocal()
        // This is  meven repo
        maven { url 'https://repo.maven.apache.org/maven2/'}
        maven { url 'https://plugins.gradle.org/m2/'}
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("gradle.plugin.com.palantir:jacoco-coverage:0.4.0")
    }
}

//Plugins
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
//apply plugin: 'com.palantir.jacoco-full-report'
apply plugin: 'application'

mainClassName = 'com.java.app.AccessingDataJpaApplication'

sourceCompatibility = 1.8

ext {
    springCloudVersion = 'Finchley.RELEASE'
}
dependencies {
    testImplementation('junit:junit:4.12')
    testCompile('org.mockito:mockito-core:3.2.4')
    testCompile('org.springframework.security:spring-security-test:5.2.1.RELEASE')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-web')
    //compile('org.springframework.cloud:spring-cloud-starter-sleuth') 
    compile('org.springframework.boot:spring-boot-starter-security')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.apache.commons:commons-lang3:3.0')
    runtime('com.h2database:h2')
}

test {
    useJUnit()
}

// In this section you declare where to find the dependencies of your project
repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}
